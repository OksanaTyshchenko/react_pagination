{"version":3,"sources":["usePagination.ts","Pagination.tsx","App.tsx","index.tsx"],"names":["range","start","end","length","Array","from","_","idx","DOTS","Pagination","props","total","perPage","page","onPageChange","siblingCount","withInfo","onPerPageChange","paginationRange","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","usePagination","paginationRange2","map","elem","id","uuidv4","value","lastPage","className","type","classNames","disabled","onClick","selected","onChange","event","target","App","useState","selectedPage","setSelectedPage","setPerPage","pageNumber","count","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ae8986d.chunk.js","sourcesContent":["import { useMemo } from 'react';\n\nconst range = (start: number, end: number) => {\n  const length = end - start + 1;\n\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\nexport const DOTS = 8230;\n\ntype Params = {\n  total: number;\n  perPage: number;\n  page: number;\n  siblingCount: number;\n};\n\ntype Func = (obj: Params) => number[];\n\nexport const usePagination: Func = ({\n  total,\n  perPage,\n  page,\n  siblingCount,\n}) => {\n  const paginationRange = useMemo(() => {\n    const totalPageCount = Math.ceil(total / perPage);\n    const totalPageNumbers = siblingCount + 5;\n\n    if (totalPageNumbers >= totalPageCount) {\n      return range(1, totalPageCount);\n    }\n\n    const leftSiblingIndex = Math.max(page - siblingCount, 1);\n    const rightSiblingIndex = Math.min(page + siblingCount, totalPageCount);\n\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPageCount;\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      const leftItemCount = 3 + 2 * siblingCount;\n      const leftRange = range(1, leftItemCount);\n\n      return [...leftRange, DOTS, totalPageCount];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      const rightItemCount = 3 + 2 * siblingCount;\n      const rightRange = range(\n        totalPageCount - rightItemCount + 1,\n        totalPageCount,\n      );\n\n      return [firstPageIndex, DOTS, ...rightRange];\n    }\n\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      const middleRange = range(leftSiblingIndex, rightSiblingIndex);\n\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n    }\n\n    return [];\n  }, [total, perPage, page, siblingCount]);\n\n  return paginationRange;\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\nimport { usePagination, DOTS } from './usePagination';\nimport './Pagination.scss';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  page: number;\n  onPageChange: (x: number) => void;\n  siblingCount: number;\n  withInfo: boolean;\n  onPerPageChange: (y: number) => void;\n};\n\nconst Pagination: React.FC<Props> = (props) => {\n  const {\n    total,\n    perPage,\n    page,\n    onPageChange,\n    siblingCount,\n    withInfo,\n    onPerPageChange,\n  } = props;\n\n  const paginationRange: number[] = usePagination({\n    total,\n    perPage,\n    page,\n    siblingCount,\n  });\n\n  const paginationRange2 = paginationRange.map((elem) => ({\n    id: uuidv4(),\n    value: elem,\n  }));\n\n  if (page === 0 || paginationRange2.length < 2) {\n    return null;\n  }\n\n  const onNext = () => {\n    onPageChange(page + 1);\n  };\n\n  const onPrevious = () => {\n    onPageChange(page - 1);\n  };\n\n  const lastPage = paginationRange2[paginationRange2.length - 1].value;\n\n  return (\n    <div className=\"pagination\">\n      {withInfo && (\n        <p className=\"pagination__text\">\n          {page === lastPage\n            ? `${(page - 1) * perPage + 1}-${total} of ${total}`\n            : `${(page - 1) * perPage + 1}-${perPage * page} of ${total}`}\n        </p>\n      )}\n      <ul className=\"pagination-container\">\n        <button\n          type=\"button\"\n          className={classNames('pagination-item', {\n            disabled: page === 1,\n          })}\n          onClick={onPrevious}\n        >\n          <div className=\"arrow left\" />\n        </button>\n\n        {paginationRange2.map(({ value, id }) => {\n          if (value === DOTS) {\n            return (\n              <button\n                className=\"pagination-item dots\"\n                type=\"button\"\n                key={id}\n              >\n                &#8230;\n              </button>\n            );\n          }\n\n          return (\n            <button\n              className={classNames('pagination-item', {\n                selected: value === page,\n              })}\n              onClick={() => onPageChange(value)}\n              type=\"button\"\n              key={id}\n            >\n              {value}\n            </button>\n          );\n        })}\n\n        <button\n          className={classNames('pagination-item', {\n            disabled: page === lastPage,\n          })}\n          onClick={onNext}\n          type=\"button\"\n        >\n          <div className=\"arrow right\" />\n        </button>\n      </ul>\n\n      <div className=\"pagination__selectWrapper\">\n        <p className=\"pagination__selectText\">Count element per page:</p>\n        <select\n          value={perPage}\n          onChange={(event) => {\n            const { value } = event.target;\n\n            onPerPageChange(+value);\n            onPageChange(1);\n          }}\n          className=\"pagination__select\"\n        >\n          <option>3</option>\n          <option>5</option>\n          <option>10</option>\n          <option>20</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Pagination from './Pagination';\n\nconst App: React.FC = () => {\n  const [selectedPage, setSelectedPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const onPageChange = (pageNumber: number) => {\n    setSelectedPage(pageNumber);\n  };\n\n  const onPerPageChange = (count: number) => {\n    setPerPage(count);\n  };\n\n  return (\n    <div className=\"App\">\n      <Pagination\n        total={42}\n        perPage={perPage}\n        page={selectedPage}\n        onPageChange={onPageChange}\n        siblingCount={1}\n        withInfo\n        onPerPageChange={onPerPageChange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}